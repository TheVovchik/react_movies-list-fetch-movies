{"version":3,"sources":["components/MovieCard/MovieCard.tsx","api.ts","components/AppProvider/AppProvider.tsx","components/MoviesList/MoviesList.tsx","components/Button/Button.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","getMovie","query","fetch","then","res","json","catch","error","Response","Error","AppContext","React","createContext","movies","isMovieExist","isSearch","handleInput","getMovieFromServer","handleSearch","addingMovie","AppProvider","children","useState","setMovies","setQuery","setMovie","setIsMovieExist","setIsSearch","appliedQuery","a","newFilm","Poster","Title","Plot","imdbID","newMovieInList","imdbId","contextValue","event","newValue","target","value","preventDefault","newMovie","some","film","Provider","MoviesList","useContext","map","Button","props","FindMovie","onSubmit","htmlFor","type","id","placeholder","onChange","classNames","disabled","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbfb24fa.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=378681db';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch((error) => ({\n      Response: 'False',\n      Error: error,\n    }));\n}\n","import React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Context = {\n  movies: Movie[],\n  query: string,\n  movie: Movie | null,\n  isMovieExist: boolean,\n  isSearch: boolean,\n\n  handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  getMovieFromServer: (appliedQuery: string) => void,\n  handleSearch: (event: React.FormEvent<HTMLFormElement>) => void,\n  addingMovie: () => void,\n};\n\nexport const AppContext = React.createContext<Context>({\n  movies: [],\n  query: '',\n  movie: null,\n  isMovieExist: false,\n  isSearch: false,\n\n  handleInput: () => {},\n  getMovieFromServer: () => {},\n  handleSearch: () => {},\n  addingMovie: () => {},\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isMovieExist, setIsMovieExist] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    setQuery(newValue);\n\n    if (newValue === '' || newValue !== query) {\n      setIsMovieExist(false);\n    }\n  };\n\n  const getMovieFromServer = async (appliedQuery: string) => {\n    try {\n      const newFilm = await getMovie(appliedQuery);\n\n      setIsSearch(false);\n\n      if ('Poster' in newFilm) {\n        const {\n          Poster,\n          Title,\n          Plot,\n          imdbID,\n        } = newFilm as MovieData;\n\n        const movieImg = Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : Poster;\n\n        const newMovieInList = {\n          title: Title,\n          description: Plot,\n          imgUrl: movieImg,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        setIsMovieExist(false);\n        setMovie(newMovieInList);\n      } else {\n        setIsMovieExist(true);\n        setMovie(null);\n      }\n    } catch {\n      throw new Error();\n    }\n  };\n\n  const handleSearch = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsSearch(true);\n    getMovieFromServer(query);\n  };\n\n  const checkMovie = (newMovie: Movie) => {\n    return movies.some(film => film.imdbId === newMovie.imdbId);\n  };\n\n  const addingMovie = () => {\n    if (movie) {\n      if (!checkMovie(movie)) {\n        setMovies([...movies, movie]);\n      }\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  const contextValue = {\n    movies,\n    query,\n    movie,\n    isMovieExist,\n    isSearch,\n\n    handleInput,\n    getMovieFromServer,\n    handleSearch,\n    addingMovie,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { AppContext } from '../AppProvider';\n\nexport const MoviesList: React.FC = () => {\n  const { movies } = useContext(AppContext);\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n};\n\nexport const Button: FC<Props> = ({ children, ...props }) => {\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { AppContext } from '../AppProvider';\nimport './FindMovie.scss';\nimport { Button } from '../Button';\n\nexport const FindMovie: React.FC = () => {\n  const {\n    query,\n    movie,\n    isMovieExist,\n    isSearch,\n    handleInput,\n    handleSearch,\n    addingMovie,\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInput}\n            />\n          </div>\n\n          {isMovieExist && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <Button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isSearch },\n              )}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </Button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <Button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addingMovie}\n              >\n                Add to the list\n              </Button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { FC } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => (\n  <div className=\"page\">\n    <div className=\"page-content\">\n      <MoviesList />\n    </div>\n\n    <div className=\"sidebar\">\n      <FindMovie />\n    </div>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\nimport { AppProvider } from './components/AppProvider';\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}